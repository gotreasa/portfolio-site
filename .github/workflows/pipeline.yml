name: Pipeline

env:
  NODE_VERSION: 18.18
  HUGO_VERSION: 0.136.4

permissions:
  checks: write
  contents: read
  pull-requests: read
  actions: read

on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@master

  prettier-verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - run: npm install
      - name: Prettify the code
        run: npm run prettier:verify

  eslint-verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - run: npm install
      - name: Prettify the code
        run: npm run lint:verify

  # Check for any broken links
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
      # checkout to latest commit
      - uses: actions/checkout@master
      # run markdown linter
      - uses: gaurav-nelson/github-action-markdown-link-check@1.0.15

  snyk:
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check configuration files for security issues
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/node@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --all-projects --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
      - name: Test the code for security vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code
          args: test --sarif-file-output=snyk-code.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif

  hugo-build:
    needs: [commitlint, prettier-verify, eslint-verify, markdown-link-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@main
      - name: Setup hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '${{ env.HUGO_VERSION }}'
          extended: true
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: false
      - name: Build
        run: |
          npm install 
          npm run build
